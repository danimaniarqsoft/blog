<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DCP blog</title>
    <link>http://localhost:1313/blog/</link>
    <description>Recent content on DCP blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Jun 2025 09:54:26 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Portal Guidelines</title>
      <link>http://localhost:1313/blog/blog/portals/portal-guidelines/</link>
      <pubDate>Wed, 04 Jun 2025 09:54:26 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/portals/portal-guidelines/</guid>
      <description>&lt;p&gt;Guidelines and Best Practices for Building a WordPress Portal.&lt;/p&gt;&#xA;&lt;h2 id=&#34;-security-guidelines&#34;&gt;üîê Security Guidelines&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Always use the &lt;strong&gt;latest version&lt;/strong&gt; of WordPress, themes, and plugins.&lt;/li&gt;&#xA;&lt;li&gt;Choose themes and plugins from &lt;strong&gt;reputable developers&lt;/strong&gt; with frequent updates.&lt;/li&gt;&#xA;&lt;li&gt;Install a &lt;strong&gt;reliable security plugin&lt;/strong&gt; (e.g., Wordfence, iThemes Security).&lt;/li&gt;&#xA;&lt;li&gt;Enforce the use of &lt;strong&gt;strong passwords&lt;/strong&gt; for all user accounts.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Limit login attempts&lt;/strong&gt; to prevent brute force attacks.&lt;/li&gt;&#xA;&lt;li&gt;Change the default login URL (&lt;code&gt;/wp-admin&lt;/code&gt;) using a plugin or custom code.&lt;/li&gt;&#xA;&lt;li&gt;Disable or restrict access to &lt;code&gt;xmlrpc.php&lt;/code&gt; if not needed.&lt;/li&gt;&#xA;&lt;li&gt;Schedule &lt;strong&gt;regular automatic backups&lt;/strong&gt; (e.g., with UpdraftPlus).&lt;/li&gt;&#xA;&lt;li&gt;Assign &lt;strong&gt;user roles appropriately&lt;/strong&gt; and follow the principle of least privilege.&lt;/li&gt;&#xA;&lt;li&gt;Enable &lt;strong&gt;SSL (HTTPS)&lt;/strong&gt; and force its usage site-wide.&lt;/li&gt;&#xA;&lt;li&gt;Hide the WordPress version in the site source code.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-ux-guidelines&#34;&gt;üß≠ UX Guidelines&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Use a &lt;strong&gt;clean, user-focused design&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Ensure the site is &lt;strong&gt;fully responsive&lt;/strong&gt; for mobile and tablet users.&lt;/li&gt;&#xA;&lt;li&gt;Maintain &lt;strong&gt;visual consistency&lt;/strong&gt; (colors, typography, spacing).&lt;/li&gt;&#xA;&lt;li&gt;Optimize &lt;strong&gt;page load speed&lt;/strong&gt; (cache, image compression, etc.).&lt;/li&gt;&#xA;&lt;li&gt;Implement &lt;strong&gt;intuitive navigation&lt;/strong&gt; with clear menus and structure.&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;visible and effective calls to action (CTA)&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Provide &lt;strong&gt;instant feedback&lt;/strong&gt; on user interactions (e.g., form submissions).&lt;/li&gt;&#xA;&lt;li&gt;Include an &lt;strong&gt;internal search function&lt;/strong&gt; if the site has large content volume.&lt;/li&gt;&#xA;&lt;li&gt;Follow &lt;strong&gt;accessibility standards&lt;/strong&gt; (proper labeling, contrast, keyboard navigation).&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-technical-best-practices&#34;&gt;‚öôÔ∏è Technical Best Practices&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Choose &lt;strong&gt;WordPress-optimized hosting&lt;/strong&gt; with reliable uptime and support.&lt;/li&gt;&#xA;&lt;li&gt;Use a &lt;strong&gt;lightweight, well-coded theme&lt;/strong&gt; (e.g., Astra, GeneratePress).&lt;/li&gt;&#xA;&lt;li&gt;Install &lt;strong&gt;only essential plugins&lt;/strong&gt; to avoid bloat.&lt;/li&gt;&#xA;&lt;li&gt;Enable &lt;strong&gt;resource compression&lt;/strong&gt; (GZIP, minify JS/CSS).&lt;/li&gt;&#xA;&lt;li&gt;Use a &lt;strong&gt;caching system&lt;/strong&gt; (e.g., W3 Total Cache, WP Rocket).&lt;/li&gt;&#xA;&lt;li&gt;Set up &lt;strong&gt;SEO plugins&lt;/strong&gt; (e.g., Yoast SEO, Rank Math) and configure meta tags.&lt;/li&gt;&#xA;&lt;li&gt;Load only necessary scripts/styles per page (on-demand optimization).&lt;/li&gt;&#xA;&lt;li&gt;Use &lt;strong&gt;SEO-friendly permalinks&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Follow &lt;strong&gt;best coding practices&lt;/strong&gt; when customizing (use hooks, secure functions).&lt;/li&gt;&#xA;&lt;li&gt;Prepare the site to &lt;strong&gt;scale efficiently&lt;/strong&gt; for high traffic.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;-analytics-and-monitoring&#34;&gt;üìä Analytics and Monitoring&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Integrate &lt;strong&gt;analytics tools&lt;/strong&gt; like Google Analytics or Matomo.&lt;/li&gt;&#xA;&lt;li&gt;Set up &lt;strong&gt;Google Search Console&lt;/strong&gt; for SEO tracking and site health.&lt;/li&gt;&#xA;&lt;li&gt;Test performance with &lt;strong&gt;PageSpeed Insights, GTmetrix&lt;/strong&gt;, or &lt;strong&gt;Lighthouse&lt;/strong&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Continuously analyze &lt;strong&gt;user behavior&lt;/strong&gt; to drive iterative improvements.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Queue Data Structure</title>
      <link>http://localhost:1313/blog/blog/data-structures/queue/</link>
      <pubDate>Mon, 02 Jun 2025 17:27:55 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/data-structures/queue/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;Queue&lt;/strong&gt; is a linear data structure that follows the &lt;strong&gt;First In, First Out (FIFO)&lt;/strong&gt; principle. This means that the first element added to the queue will be the first one to be removed. It is analogous to a line of people waiting for a service: the person who arrives first gets served first.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stack Data Structure</title>
      <link>http://localhost:1313/blog/blog/data-structures/stack/</link>
      <pubDate>Mon, 02 Jun 2025 17:21:34 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/data-structures/stack/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;Stack&lt;/strong&gt; is a linear data structure that follows the &lt;strong&gt;Last In, First Out (LIFO)&lt;/strong&gt; principle. This means that the last element added to the stack is the first one to be removed. It is analogous to a stack of plates where only the top plate can be removed at a time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hash Tables: A Comprehensive Overview</title>
      <link>http://localhost:1313/blog/blog/data-structures/hash-tables/</link>
      <pubDate>Mon, 02 Jun 2025 13:05:33 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/data-structures/hash-tables/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;hash table&lt;/strong&gt; (also known as a &lt;strong&gt;hash map&lt;/strong&gt;) is a data structure that provides an efficient way of storing and retrieving data using a key-value pair model. The efficiency of hash tables lies in their ability to provide constant time complexity \(\mathcal{O}(1)\), on average, for insertion, deletion, and lookup operations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trie Data Structure</title>
      <link>http://localhost:1313/blog/blog/data-structures/trie/</link>
      <pubDate>Sat, 31 May 2025 14:33:36 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/data-structures/trie/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;Trie&lt;/strong&gt; (pronounced as &amp;ldquo;try&amp;rdquo;), also known as a &lt;em&gt;prefix tree&lt;/em&gt; or &lt;em&gt;digital tree&lt;/em&gt;, is a type of search tree used to store associative data structures, typically strings. Tries are especially useful for solving problems involving dynamic sets of strings, such as dictionary management, autocomplete systems, and IP routing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Radix Sort Algorithm: A Detailed Overview</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/radix-sort/</link>
      <pubDate>Sat, 31 May 2025 13:29:26 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/radix-sort/</guid>
      <description>&lt;p&gt;Radix Sort is a non-comparative, integer sorting algorithm that sorts data with integer keys by grouping the keys by individual digits which share the same position and value. It processes each digit of the numbers, starting from the least significant digit (LSD) or most significant digit (MSD), depending on the implementation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quick Sort Algorithm: An In-depth Guide</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/quick-sort/</link>
      <pubDate>Tue, 27 May 2025 22:07:05 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/quick-sort/</guid>
      <description>&lt;p&gt;Quick Sort is one of the most efficient and widely used sorting algorithms. Introduced by Tony Hoare in 1960, it employs a divide-and-conquer strategy to sort elements. It is particularly known for its performance in practice, often outperforming other sorting algorithms such as merge sort and bubble sort for large datasets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sentence Splitting in NLP: Techniques and Examples</title>
      <link>http://localhost:1313/blog/blog/ai/sentence-splitting/</link>
      <pubDate>Mon, 26 May 2025 13:36:20 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/ai/sentence-splitting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Sentence Splitting&lt;/strong&gt;, also known as &lt;strong&gt;sentence segmentation&lt;/strong&gt;, is the process of dividing a text into its constituent sentences. It&amp;rsquo;s a fundamental task in Natural Language Processing (NLP), typically performed as a first step in various downstream tasks like machine translation, information extraction, sentiment analysis, and text summarization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bubble Sort Algorithm</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/bubble-sort/</link>
      <pubDate>Fri, 23 May 2025 10:23:54 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/bubble-sort/</guid>
      <description>&lt;p&gt;Bubble Sort is one of the simplest sorting algorithms often taught as an introductory algorithm due to its intuitive approach. It repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order. This process continues until the list is sorted.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Max Heap and Min Heap Algorithms</title>
      <link>http://localhost:1313/blog/blog/data-structures/max-and-min-heap/</link>
      <pubDate>Tue, 20 May 2025 04:19:10 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/data-structures/max-and-min-heap/</guid>
      <description>&lt;p&gt;Heaps are specialized tree-based data structures that satisfy the &lt;em&gt;heap property&lt;/em&gt;. In a &lt;strong&gt;max heap&lt;/strong&gt;, the parent node is always greater than or equal to its children, while in a &lt;strong&gt;min heap&lt;/strong&gt;, the parent is always less than or equal to its children. Heaps are commonly used to implement &lt;strong&gt;priority queues&lt;/strong&gt; and &lt;strong&gt;heap sort&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Merge Sort Algorithm</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/merge-sort/</link>
      <pubDate>Mon, 19 May 2025 10:14:35 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/merge-sort/</guid>
      <description>&lt;p&gt;Merge Sort is a classical divide-and-conquer algorithm that efficiently sorts an array by recursively dividing it into two halves, sorting them independently, and then merging the sorted halves. It is one of the fundamental algorithms in computer science, often discussed in depth in books such as &lt;em&gt;Introduction to Algorithms&lt;/em&gt; by Thomas H. Cormen et al.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Daily TOEIC Preparation Routine</title>
      <link>http://localhost:1313/blog/blog/routines/toeic-prep/</link>
      <pubDate>Sun, 18 May 2025 19:47:35 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/routines/toeic-prep/</guid>
      <description>&lt;p&gt;A structured routine to prepare for the TOEIC exam, ideally over 4‚Äì8 weeks, with 1.5 to 2 hours of daily practice.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Heap Sort Algorithm</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/heap-sort/</link>
      <pubDate>Sun, 18 May 2025 12:19:20 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/heap-sort/</guid>
      <description>&lt;p&gt;Heap Sort is a comparison-based sorting technique based on a Binary Heap data structure. It is similar to selection sort where we first find the maximum element and place it at the end. We repeat the same process for the remaining elements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Counting Sort Algorithm</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/counting-sort/</link>
      <pubDate>Sun, 18 May 2025 11:58:00 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/counting-sort/</guid>
      <description>&lt;p&gt;Counting Sort is a non-comparison-based sorting algorithm that operates with integer keys within a known, limited range. Unlike typical comparison sorts such as QuickSort or MergeSort, Counting Sort leverages the frequency of each element to achieve linear time sorting under suitable conditions. It is especially effective when the range of input values (k) is not significantly larger than the number of elements (n).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Insertion Sort Algorithm</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/insertion-sort/</link>
      <pubDate>Sat, 17 May 2025 12:28:05 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/insertion-sort/</guid>
      <description>&lt;p&gt;Insertion Sort is a simple and intuitive comparison-based sorting algorithm. It builds the final sorted array one element at a time. It is much less efficient on large lists than more advanced algorithms such as quicksort, heapsort, or merge sort. However, it has advantages in simplicity and efficiency for small datasets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Selection Sort Algorithm</title>
      <link>http://localhost:1313/blog/blog/algorithms/sort/selection-sort/</link>
      <pubDate>Sat, 17 May 2025 00:02:39 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/algorithms/sort/selection-sort/</guid>
      <description>&lt;p&gt;Selection Sort is a simple comparison-based sorting algorithm. It works by dividing the input list into two parts: the sublist of items already sorted, which is built up from left to right, and the sublist of items remaining to be sorted that occupy the rest of the list. The algorithm proceeds by finding the smallest (or largest, depending on the sorting order) element from the unsorted sublist and swapping it with the leftmost unsorted element, moving the sublist boundaries one element to the right.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deep Learning Project: Named Entity Recognition (NER) with LLaMA Embeddings</title>
      <link>http://localhost:1313/blog/blog/ai/ner-project/</link>
      <pubDate>Fri, 16 May 2025 10:22:07 -0600</pubDate>
      <guid>http://localhost:1313/blog/blog/ai/ner-project/</guid>
      <description>&lt;p&gt;Named Entity Recognition (NER) is a key task in Natural Language Processing (NLP) where the goal is to locate and classify named entities in text into predefined categories such as person names, organizations, locations, time expressions, etc. In this project, we leverage &lt;strong&gt;LLaMA (Large Language Model Meta AI)&lt;/strong&gt; for generating high-quality embeddings and train a deep learning model on top for the NER task.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java best practices</title>
      <link>http://localhost:1313/blog/blog/java/java-best-practices/</link>
      <pubDate>Mon, 12 May 2025 04:14:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/java/java-best-practices/</guid>
      <description>&lt;p&gt;The best practices come with experience so this post is going to be updated if new best practices are learned.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebFlux best practices</title>
      <link>http://localhost:1313/blog/blog/java/java-reactive-best-practices/</link>
      <pubDate>Mon, 12 May 2025 04:14:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/java/java-reactive-best-practices/</guid>
      <description>&lt;p&gt;Spring WebFlux is a non-blocking, reactive web framework within the Spring ecosystem. It&amp;rsquo;s designed for building reactive, scalable web applications that handle numerous concurrent connections efficiently&lt;/p&gt;</description>
    </item>
    <item>
      <title>Timeline with latex</title>
      <link>http://localhost:1313/blog/blog/latex/latex-timeline/</link>
      <pubDate>Tue, 22 Apr 2025 21:21:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/latex/latex-timeline/</guid>
      <description>&lt;p&gt;In this post we explain how to create a simple timeline using latex&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to add timestamp in each page</title>
      <link>http://localhost:1313/blog/blog/latex/add-timestamp/</link>
      <pubDate>Wed, 19 Feb 2025 21:21:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/latex/add-timestamp/</guid>
      <description>&lt;p&gt;You can add a &lt;strong&gt;date stamp&lt;/strong&gt; at the bottom of each page using the &lt;code&gt;fancyhdr&lt;/code&gt; package. Here&amp;rsquo;s how:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to Generative AI and LLMs</title>
      <link>http://localhost:1313/blog/blog/ai/generative-ai/</link>
      <pubDate>Wed, 19 Feb 2025 21:21:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/ai/generative-ai/</guid>
      <description>&lt;p&gt;Generative AI is a type of artificial intelligence that can create new content, such as text, images, audio, or video, based on patterns it learns from existing data. In this post we briefly explain the main concepts, history and techiques behind of the generative ai.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java Web flux</title>
      <link>http://localhost:1313/blog/blog/java/java-web-flux/</link>
      <pubDate>Tue, 18 Feb 2025 04:14:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/java/java-web-flux/</guid>
      <description>&lt;h1 id=&#34;-java-reactive-programming-with-spring-webflux-building-scalable-non-blocking-applications&#34;&gt;‚ö° Java Reactive Programming with Spring WebFlux: Building Scalable, Non-Blocking Applications&lt;/h1&gt;&#xA;&lt;p&gt;In today‚Äôs cloud-native world, the demand for highly responsive and scalable applications has never been greater. Traditional thread-per-request architectures often struggle under heavy load. That‚Äôs where &lt;strong&gt;Reactive Programming&lt;/strong&gt; shines ‚Äî and in the Java ecosystem, &lt;strong&gt;Spring WebFlux&lt;/strong&gt; is the tool of choice for building reactive systems.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Json Web Token</title>
      <link>http://localhost:1313/blog/blog/security/jwt/</link>
      <pubDate>Tue, 18 Feb 2025 04:14:54 -0800</pubDate>
      <guid>http://localhost:1313/blog/blog/security/jwt/</guid>
      <description>&lt;p&gt;A &lt;strong&gt;JSON Web Token (JWT)&lt;/strong&gt; is an open standard &lt;a href=&#34;https://datatracker.ietf.org/doc/html/rfc7519&#34;&#xA;&#xA;&#xA;&#xA;&#xA; target=&#34;_blank&#34;&#xA; &#xA;&#xA;&#xA;&gt;RFC 7519&lt;/a&gt; for securely transmitting information between parties as a &lt;strong&gt;JSON object&lt;/strong&gt;. This information can be verified and trusted because it is digitally signed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Daniel Pichardo</title>
      <link>http://localhost:1313/blog/authors/daniel-cortes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/authors/daniel-cortes/</guid>
      <description>&lt;p&gt;Chief Software Architect. Responsible for the technical direction of many projects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elements</title>
      <link>http://localhost:1313/blog/elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/elements/</guid>
      <description>&lt;details class=&#34;table-of-content &#34;&gt;&#xA;  &lt;summary&gt;&#xA;    &#xA;      Table of Contents&#xA;    &#xA;  &lt;/summary&gt;&#xA;  &lt;nav id=&#34;TableOfContents&#34;&gt;&#xA;  &lt;ol&gt;&#xA;    &lt;li&gt;&lt;a href=&#34;#heading-2&#34;&gt;Heading 2&lt;/a&gt;&#xA;      &lt;ol&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#heading-3&#34;&gt;Heading 3&lt;/a&gt;&#xA;          &lt;ol&gt;&#xA;            &lt;li&gt;&lt;a href=&#34;#heading-4&#34;&gt;Heading 4&lt;/a&gt;&#xA;              &lt;ol&gt;&#xA;                &lt;li&gt;&lt;a href=&#34;#heading-5&#34;&gt;Heading 5&lt;/a&gt;&lt;/li&gt;&#xA;              &lt;/ol&gt;&#xA;            &lt;/li&gt;&#xA;          &lt;/ol&gt;&#xA;        &lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#emphasis&#34;&gt;Emphasis&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#button&#34;&gt;Button&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#link&#34;&gt;Link&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#paragraph&#34;&gt;Paragraph&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#ordered-list&#34;&gt;Ordered List&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#unordered-list&#34;&gt;Unordered List&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#notice&#34;&gt;Notice&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#tab&#34;&gt;Tab&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#accordions&#34;&gt;Accordions&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#code-and-syntax-highlighting&#34;&gt;Code and Syntax Highlighting&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#blockquote&#34;&gt;Blockquote&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#tables&#34;&gt;Tables&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#image&#34;&gt;Image&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#gallery&#34;&gt;Gallery&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#slider&#34;&gt;Slider&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#youtube-video&#34;&gt;Youtube video&lt;/a&gt;&lt;/li&gt;&#xA;        &lt;li&gt;&lt;a href=&#34;#custom-video&#34;&gt;Custom video&lt;/a&gt;&lt;/li&gt;&#xA;      &lt;/ol&gt;&#xA;    &lt;/li&gt;&#xA;  &lt;/ol&gt;&#xA;&lt;/nav&gt;&#xA;&lt;/details&gt;&#xA;&#xA;&lt;p&gt;Here is an example of headings. You can use this heading by the following markdown rules. For example: use &lt;code&gt;#&lt;/code&gt; for heading 1 and use &lt;code&gt;######&lt;/code&gt; for heading 6.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Privacy</title>
      <link>http://localhost:1313/blog/privacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/privacy/</guid>
      <description>&lt;h4 id=&#34;responsibility-of-contributors&#34;&gt;Responsibility of Contributors&lt;/h4&gt;&#xA;&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus, donec nunc eros, ullamcorper id feugiat quisque aliquam sagittis. Sem turpis sed viverra massa gravida pharetra. Non dui dolor potenti eu dignissim fusce. Ultrices amet, in curabitur a arcu a lectus morbi id. Iaculis erat sagittis in tortor cursus. Molestie urna eu tortor, erat scelerisque eget. Nunc hendrerit sed interdum lacus. Lorem quis viverra sed&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ready to build your next project with Hugo?</title>
      <link></link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid></guid>
      <description></description>
    </item>
    <item>
      <title>What Users Are Saying About Hugoplate</title>
      <link></link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid></guid>
      <description></description>
    </item>
  </channel>
</rss>
